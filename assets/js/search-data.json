{
  
    
        "post0": {
            "title": "Real Mysql 8.0 설치 (for mac)",
            "content": "설치 방법 . Binary 설치 파일 다운로드 | # 다운로드 할 경로에 접근 $ cd /usr/local # binary 파일 다운로드 (8.0.21 버전) $ wget https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.21-macos10.15-x86_64.tar.gz # 다운로드 파일 확인 $ ll mysql-8.0* -rw-r--r-- 1 root wheel 116M Jun 17 2020 mysql-8.0.21-macos10.15-x86_64.tar.gz . 압축 해제 및 Soft Link 연결 | # tar 명령어를 사용하여 압축해제 $ tar -zxvf mysql-8.0.21-macos10.15-x86_64.tar.gz # Soft Link 연결 $ ln -s /usr/local/mysql-8.0.21-macos10.15-x86_64 mysql . MySQL 서버 디렉토리 경로 설정 (Config 정리) | ## config 파일 생성 $ vi /etc/my.cnf [mysqld] user=mysql basedir=/usr/local/mysql datadir=/usr/local/mysql_data socket=/usr/local/mysql_data/mysql.sock # Disabling symbolic-links is recommended to prevent assorted security risks symbolic-links=0 #replication log-bin=/usr/local/mysql_data/bin_log/mysql-bin server-id=1 #character_set collation-server = utf8mb4_unicode_ci character-set-server = utf8mb4 skip-character-set-client-handshake [mysqld_safe] log-error=/var/log/mysqld.log pid-file=/usr/local/mysql_data/mysql.pid # # include all files from the config directory # !includedir /etc/my.cnf.d .",
            "url": "https://martin-son.github.io/Martin-IT-Blog/real%20mysql%208.0/2022/03/13/Real-Mysql-8.0-%EC%84%A4%EC%B9%98.html",
            "relUrl": "/real%20mysql%208.0/2022/03/13/Real-Mysql-8.0-%EC%84%A4%EC%B9%98.html",
            "date": " • Mar 13, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "외래키는 성능에 어떤 영향을 미칠까?",
            "content": "외래키 (Foreign Key)란? . 외래키는 MySQL에서 기본 엔진으로 사용되는 InnoDB 스토리지 엔진에서만 사용 가능한 제약조건입니다. 외래키는 서로 다른 테이블 간 부모-자식 관계를 정의하여, 데이터 변경이 발생하면 정의한 제약조건에 따라 함께 영향을 받는 특징을 가지고 있습니다. 또한, 부모-자식 관계로 정의된 컬럼에 대해 자동으로 인덱스가 생성됩니다. . 외래키의 특징 . 데이터베이스에서 DML을 통해 데이터 변경이 발생하면, Lock을 소유하게 됩니다. 일반적으로 외래키 제약조건이 없는 테이블이라면, 다른 테이블에 대한 DML에 대해서는 Lock으로 인해 대기하지 않습니다. . 하지만, 외래키 제약조건이 있는 테이블의 경우, 부모-자식 관계로 정의된 컬럼에 대해서 두 테이블 데이터가 일치해야 하기 때문에, 외래키로 정의된 동일 데이터에 대해 DML 작업이 발생하게 되면, Lock으로 인해 대기해야 하는 상황이 발생합니다. 위 상황을 간단한 아래 테스트를 통해 확인해 볼 수 있습니다. . -- 외래키 제약조건을 가진 테스트 테이블 A, B 생성 mysql&gt; CREATE TABLE parent_fk ( id int AUTO_INCREMENT PRIMARY KEY, name varchar(10), age int NOT NULL, INDEX ix_name_age (name, age) ); Query OK, 0 rows affected (0.04 sec) mysql&gt; CREATE TABLE child_fk ( id int AUTO_INCREMENT PRIMARY KEY, p_name varchar(10), product varchar(15), p_age int(11), FOREIGN KEY (p_name, p_age) REFERENCES parent_fk (name, age) ON DELETE CASCADE ON UPDATE CASCADE ); Query OK, 0 rows affected (0.05 sec) -- 테스트 데이터 Insert mysql&gt; INSERT parent_fk (name, age) VALUES (&#39;Tom&#39;, 11), (&#39;Martin&#39;, 29), (&#39;David&#39;, 17), (&#39;Grek&#39;, 40), (&#39;Lucy&#39;, 26); Query OK, 5 rows affected (0.02 sec) Records: 5 Duplicates: 0 Warnings: 0 -- 외래키 제약조건 상 데이터 정합성을 유지하기 위해 부모 테이블에 없는 데이터 Insert 시 에러 발생. mysql&gt; INSERT child_fk (p_name, product, p_age) VALUES (&#39;Tom&#39;, &#39;TV&#39;, 13); ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`blog_test`.`child_fk`, CONSTRAINT `child_fk_ibfk_1` FOREIGN KEY (`p_name`, `p_age`) REFERENCES `parent_fk` (`name`, `age`) ON DELETE CASCADE ON UPDATE CASCADE) mysql&gt; INSERT child_fk (p_name, product, p_age) VALUES (&#39;Tom&#39;, &#39;TV&#39;, 11); Query OK, 1 row affected (0.03 sec) -- 데이터 확인 mysql&gt; SELECT * FROM parent_fk; +-+--+--+ | id | name | age | +-+--+--+ | 3 | David | 17 | | 4 | Grek | 40 | | 5 | Lucy | 26 | | 2 | Martin | 29 | | 1 | Tom | 11 | +-+--+--+ 5 rows in set (0.01 sec) mysql&gt; SELECT * FROM child_fk; +-+--++-+ | id | p_name | product | p_age | +-+--++-+ | 2 | Tom | TV | 11 | | 4 | David | Desk | 17 | +-+--++-+ 2 rows in set (0.01 sec) . 시간 세션 1 세션 2 비고 . 1 | START TRANSACTION; |   |   | . 2 | UPDATE parent_fk SET age=80 WHERE name = &#39;Tom&#39;; |   | name=’Tom’인 부모테이블의 age 컬럼 업데이트 update | . 3 |   | START TRANSACTION; |   | . 4 |   | UPDATE child_fk SET product = &#39;Notebook&#39; WHERE p_name = &#39;Tom&#39;; | 자식 테이블의 name=’Tom’ product 컬럼 update | . 5 |   | ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction | Lock으로 인해 wait_timeout 만큼 대기 후 에러 로그 발생 | . 외래키의 성능 . 외래키 제약조건이 있는 테이블의 경우, 부모-자식 테이블의 데이터 정합성을 위해 Lock을 이용한다는 것을 확인할 수 있습니다. DML이 발생할 경우, 제약 조건을 만족하는지 확인하는 과정이 추가되면, 성능에는 영향이 없을지 의문이 들었습니다. 그래서 sysbench 툴을 이용해 2개의 부모-자식 관계 테이블을 생성하고 Read-write 성능 테스트를 통해 어떤 영향이 있는지 확인해봤습니다. . 먼저 아래 스크립트를 통해 테스트 데이터를 준비했습니다. . # sysbench툴을 이용한 테스트 테이블 생성 ## 1억건 테이블 2개 / 약 21GB /usr/local/sysbench/share/sysbench/oltp_read_write.lua --mysql-host=&#39;[호스트 정보]&#39; --mysql-port=[Port 번호] --mysql-user=master --mysql-password=&#39;[비밀번호]&#39; --mysql-db=sbtest --db-driver=mysql --tables=2 --table-size=100000000 --threads=128 prepare .",
            "url": "https://martin-son.github.io/Martin-IT-Blog/mysql/2022/02/28/%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%EC%99%B8%EB%9E%98%ED%82%A4%EB%8A%94-%EC%96%B4%EB%96%A4-%EC%98%81%ED%96%A5%EC%9D%84-%EB%AF%B8%EC%B9%A0%EA%B9%8C.html",
            "relUrl": "/mysql/2022/02/28/%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-%EC%99%B8%EB%9E%98%ED%82%A4%EB%8A%94-%EC%96%B4%EB%96%A4-%EC%98%81%ED%96%A5%EC%9D%84-%EB%AF%B8%EC%B9%A0%EA%B9%8C.html",
            "date": " • Feb 28, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://martin-son.github.io/Martin-IT-Blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://martin-son.github.io/Martin-IT-Blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://martin-son.github.io/Martin-IT-Blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://martin-son.github.io/Martin-IT-Blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}