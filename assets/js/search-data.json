{
  
    
        "post0": {
            "title": "Real Mysql 8.0 설치",
            "content": "Real MySQL 8.0에 대해 Deep Dive 하기에 앞서 커뮤니티 버전을 Binary 파일을 이용하여 설치하는 방법에 대해 정리한 글을 공유하려 합니다. . 설치 방법 . Binary 설치 파일 다운로드 # 다운로드 할 경로에 접근 $ cd /usr/local # binary 파일 다운로드 (8.0.21 버전) $ wget https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz # 다운로드 파일 확인 $ ll mysql-8.0* -rw-r--r-- 1 root root 347814208 Jun 17 2020 mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz . | bash 다운로드 할 경로에 접근 . $ cd /usr/local . | binary 파일 다운로드 (8.0.21 버전) . $ wget https://downloads.mysql.com/archives/get/p/23/file/mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz . 다운로드 파일 확인 . $ ll mysql-8.0* -rw-r–r– 1 root root 347814208 Jun 17 2020 mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz . 2. **압축 해제 및 보안을 위한 OS 계정, 그룹 추가** bash # tar 명령어를 사용하여 압축해제 $ tar -xvf mysql-8.0.21-linux-glibc2.12-x86_64.tar.xz # mysql 그룹 &amp; USER 그룹 추가 $ groupadd mysql $ useradd -r -g mysql -s /bin/false mysql &gt; **옵션 의미** &gt; -r: 시스템 계정 생성 , -g: 세로운 그룹명 -s 새로운 계정의 로그인 Shell &gt; /bin/false: FTP접속 불가, SSH 접속불가 &gt; **mysql 계정 생성 이유** &gt; EC2에 있는 DB 데이터에 불특정 OS계정이 접근하지 못하도록 별도의 계정을 생성하여 보안적으로 관리하기 위함입니다. # Soft Link 연결 $ ln -s mysql-8.0.21-linux-glibc2.12-x86_64 mysql . MySQL 서버 디렉토리 경로 설정 (Config 정리) bash config 파일 생성 . $ vi /etc/my.cnf . | [mysqld] user=mysql basedir=/usr/local/mysql datadir=/data/mysql socket=/data/mysql.sock . Disabling symbolic-links is recommended to prevent assorted security risks . symbolic-links=0 . #replication log-bin=/bin_log/mysql-bin server-id=1 . #character_set collation-server = utf8mb4_unicode_ci character-set-server = utf8mb4 skip-character-set-client-handshake . [mysqld_safe] log-error=/var/log/mysqld.log pid-file=/mysql_data/mysql.pid . [client] socket=/data/mysql.sock . # . include all files from the config directory . # !includedir /etc/my.cnf.d . &gt; **pid 란?** &gt; * Process ID 약자로 프로세스의 실행 여부 판단에 사용됩니다. 4. **Config 경로 생성** bash # Data 디렉토리 (/data/mysql) $ mkdir -p /data/mysql $ chown -R mysql.mysql /data # pid 디렉토리 (/mysql_data) $ mkdir -p /mysql_data $ chown mysql.mysql /mysql_data # Bin_log 디렉토리 (/data/bin_log) $ mkdir -p /bin_log $ chown -R mysql:mysql /bin_log . MySQL 설치 &amp; 기동 bash #설치파일 경로 접속 $ cd /usr/local/mysql | #Mysql Install (Config 파일 미세팅 시, 경로 지정 옵션 필요) $ /usr/local/mysql/bin/mysqld –initialize-insecure . [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the –initialize-insecure option. –initialize-insecure 옵션으로 Root 계정이 비밀번호가 없어, 보안 상 경고가 나오지만, 비밀번호는 차후에 생성 예정 . #MySQL 기동 $ /usr/local/mysql/bin/mysqld_safe &amp; . 6. **MySQL 명령어 설정 &amp; 접속** bash # Mysql 명령어를 Location 관계없이 사용할 수 있도록 설정 $ sudo vi /etc/profile # 맨 하단으로 이동하여 아래 내용 추가 export DB_HOME=/usr/local/mysql export PATH=&quot;$PATH:/usr/local/mysql/bin&quot; # 해당 내용 저장 후 아래 명령어 실행 $ source /etc/profile # Mysql 접속 mysql -uroot . 접속 에러 발생 시 해결 방법 &gt; 1. error while loading shared libraries: libncurses.so.5 &gt; 2. error while loading shared libraries: libtinfo.so.5 bash . 에러메시지에 출력된 파일 형식과 다른 버전이 있는지 탐색 . $ cd / $ find | grep libtinfo . Soft Link를 통해 해당 에러메시지 파일 대신 결과로 도출된 파일 바라보도록 설정 . 결과창에 다음과 같은 경로로 나왔다고 가정 (/usr/lib64/libtinfo.so.6) . $ ln -s /usr/lib64/libncurses.so.6 /usr/lib64/libncurses.so.5 $ ln -s /usr/lib64/libtinfo.so.6 /usr/lib64/libtinfo.so.5 . 7. **root 비밀번호 설정** sql mysql&gt; ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;[비밀번호]&#39;; Query OK, 0 rows affected (0.00 sec) .",
            "url": "https://martin-son.github.io/Martin-IT-Blog/real%20mysql%208.0/2022/03/13/Real-Mysql-8.0-%EC%84%A4%EC%B9%98.html",
            "relUrl": "/real%20mysql%208.0/2022/03/13/Real-Mysql-8.0-%EC%84%A4%EC%B9%98.html",
            "date": " • Mar 13, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://martin-son.github.io/Martin-IT-Blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://martin-son.github.io/Martin-IT-Blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://martin-son.github.io/Martin-IT-Blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://martin-son.github.io/Martin-IT-Blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}