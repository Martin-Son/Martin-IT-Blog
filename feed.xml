<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://martin-son.github.io/Martin-IT-Blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://martin-son.github.io/Martin-IT-Blog/" rel="alternate" type="text/html" /><updated>2022-08-22T08:36:21-05:00</updated><id>https://martin-son.github.io/Martin-IT-Blog/feed.xml</id><title type="html">Martin’s Study Blog</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">pt-osc(pt-online-schema-change) 설치 및 사용법</title><link href="https://martin-son.github.io/Martin-IT-Blog/mysql/3rd%20party%20tool/pt-osc/2022/08/20/pt-osc-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%82%AC%EC%9A%A9%EB%B2%95.html" rel="alternate" type="text/html" title="pt-osc(pt-online-schema-change) 설치 및 사용법" /><published>2022-08-20T18:00:00-05:00</published><updated>2022-08-20T18:00:00-05:00</updated><id>https://martin-son.github.io/Martin-IT-Blog/mysql/3rd%20party%20tool/pt-osc/2022/08/20/pt-osc%20%EC%84%A4%EC%B9%98%20%EB%B0%8F%20%EC%82%AC%EC%9A%A9%EB%B2%95</id><author><name>Martin.S</name></author><category term="MySQL" /><category term="3rd party tool" /><category term="pt-osc" /><summary type="html"><![CDATA[pt-online-schema-change란? (pt-osc) MySQL을 사용하는 온라인 서비스의 경우 DDL에 algorithm=inplace, lock=none 옵션을 추가하여 테이블에 대한 Lock을 방지하고 서비스 중인 DML 트랜잭션의 영향을 최소화할 수 있는 기능이 있어 서비스 중에도 대부분 온라인 DDL이 가능합니다.]]></summary></entry><entry><title type="html">Aurora MySQL Major 버전 업그레이드</title><link href="https://martin-son.github.io/Martin-IT-Blog/aurora/mysql/rds/upgrade/2022/08/13/Aurora-MySQL-Major-%EB%B2%84%EC%A0%84-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C.html" rel="alternate" type="text/html" title="Aurora MySQL Major 버전 업그레이드" /><published>2022-08-13T18:00:00-05:00</published><updated>2022-08-13T18:00:00-05:00</updated><id>https://martin-son.github.io/Martin-IT-Blog/aurora/mysql/rds/upgrade/2022/08/13/Aurora%20MySQL%20Major%20%EB%B2%84%EC%A0%84%20%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C</id><author><name>Martin.S</name></author><category term="Aurora" /><category term="MySQL" /><category term="RDS" /><category term="Upgrade" /><summary type="html"><![CDATA[AWS Major 버전 업그레이드 Aurora Major 버전을 업그레이드는 두 가지 방법(콘솔, cli)을 통해 진행할 수 있습니다. 이번 Post에서는 cli 명령어를 통해 업그레이드하는 방법과, 운영 상 순단시간 체크를 하는 방법에 대해 정리해보려 합니다.]]></summary></entry><entry><title type="html">Lambda를 이용한 RDS 백업 로그 저장</title><link href="https://martin-son.github.io/Martin-IT-Blog/aurora/mysql/rds/lambda/slack/2022/07/24/Lambda%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-RDS-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A1%9C%EA%B7%B8-%EC%A0%80%EC%9E%A5.html" rel="alternate" type="text/html" title="Lambda를 이용한 RDS 백업 로그 저장" /><published>2022-07-24T18:00:00-05:00</published><updated>2022-07-24T18:00:00-05:00</updated><id>https://martin-son.github.io/Martin-IT-Blog/aurora/mysql/rds/lambda/slack/2022/07/24/Lambda%EB%A5%BC%20%EC%9D%B4%EC%9A%A9%ED%95%9C%20RDS%20%EC%9D%B4%EB%B2%A4%ED%8A%B8%20%EB%A1%9C%EA%B7%B8%20%EC%A0%80%EC%9E%A5</id><author><name>Martin.S</name></author><category term="Aurora" /><category term="MySQL" /><category term="RDS" /><category term="Lambda" /><category term="Slack" /><summary type="html"><![CDATA[RDS 백업 로그 저장 Aurora RDS의 경우, 백업 로그가 [RDS]-[Event] 페이지에 기록됩니다. 해당 페이지에 기록되는 로그는 약 1~3일 이후 없어지는 휘발성 로그입니다. 필요에 따라, 특정 기간의 백업 로그를 저장하기 위해 lambda와 slack을 이용하여 로그 저장 프로세스를 구축해보게 됐습니다.]]></summary></entry><entry><title type="html">인덱스(1) (Real Mysql 8.0)</title><link href="https://martin-son.github.io/Martin-IT-Blog/real%20mysql%208.0/mysql/2022/07/17/Real-Mysql-8.0-%EC%9D%B8%EB%8D%B1%EC%8A%A4(1).html" rel="alternate" type="text/html" title="인덱스(1) (Real Mysql 8.0)" /><published>2022-07-17T18:00:00-05:00</published><updated>2022-07-17T18:00:00-05:00</updated><id>https://martin-son.github.io/Martin-IT-Blog/real%20mysql%208.0/mysql/2022/07/17/Real%20Mysql%208.0%20%EC%9D%B8%EB%8D%B1%EC%8A%A4(1)</id><author><name>Martin.S</name></author><category term="Real MySQL 8.0" /><category term="MySQL" /><summary type="html"><![CDATA[인덱스 인덱스는 원하는 데이터를 쉽고 빠르게 찾을 수 있게 해주는 역할을 합니다. 원하는 정보를 검색할 때, 인덱스를 통해 해당 데이터의 주소를 찾아낼 수 있습니다. 인덱스는 key-value(인덱스 칼럼 - 데이터 주소값)로 이루어진 한 쌍으로 구성되어 있으며, 인덱스를 구성하는 컬럼순으로 항상 정렬되어 있습니다. 항상 정렬되어 있기 때문에, 인덱스가 많을수록 조회(=SELECT) 성능이 개선되고 데이터를 변경하는 DML(INSERT, DELETE, UPDATE)은 정렬로 인해 성능이 저하됩니다.]]></summary></entry><entry><title type="html">Aurora MySQL History Length 상승을 예방하는 방법</title><link href="https://martin-son.github.io/Martin-IT-Blog/aurora/mysql/2022/07/10/Aurora-MySQL-History-Length-%EC%98%81%ED%96%A5%EB%8F%84-%EC%B5%9C%EC%86%8C%ED%99%94.html" rel="alternate" type="text/html" title="Aurora MySQL History Length 상승을 예방하는 방법" /><published>2022-07-10T18:00:00-05:00</published><updated>2022-07-10T18:00:00-05:00</updated><id>https://martin-son.github.io/Martin-IT-Blog/aurora/mysql/2022/07/10/Aurora%20MySQL%20History%20Length%20%EC%98%81%ED%96%A5%EB%8F%84%20%EC%B5%9C%EC%86%8C%ED%99%94</id><author><name>Martin.S</name></author><category term="Aurora" /><category term="MySQL" /><summary type="html"><![CDATA[History Length란? Aurora MySQL은 On-premise MySQL 환경과 동일하게 REPEATABLE READ isolation level이 Default로 설정되어 있습니다. REPEATABLE READ 환경은 쿼리 실행 시점의 결과와, 실행 완료 시점의 결과가 동일해야 하기 때문에, 스냅샷 형태로 해당 시점의 결과를 저장하게 됩니다. 동시성이 높은 환경에서, 롱쿼리가 발생하게 되어 오랜 시간 시점데이터가 유지될수록, History Legnth 수치가 상승하게 됩니다.]]></summary></entry></feed>